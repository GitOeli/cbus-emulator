%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.6.0-20091004-56-g11921dc
%%CreationDate: Mon Mar 28 18:02:04 2011
%%Title: /home/srwalter/src/pic-changer/pcb/changer-page1.sch
%%Author: srwalter
%%BoundingBox: 0 0 612 792
%%Orientation: Landscape
%%Pages: 1
%%Endcomments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7485 500 translate 90 rotate
0.588235 0.588235 scale
-40000 -40000 translate
gsave
40000 40000 57000 40000 10 line
57000 40000 57000 51000 10 line
57000 51000 40000 51000 10 line
40000 51000 40000 40000 10 line
52900 40600 52900 40000 10 line
gsave
false false false false 208.000000 [(FILE:) ] 0 49500 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(REVISION:) ] 0 53000 40400 144.444443 text
grestore
gsave
false false false false 208.000000 [(DRAWN BY: ) ] 0 53000 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(PAGE) ] 0 49500 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(OF) ] 0 51200 40100 144.444443 text
grestore
gsave
false false false false 208.000000 [(TITLE) ] 0 49500 40700 144.444443 text
grestore
49400 40000 57000 40000 10 line
57000 40000 57000 41400 10 line
57000 41400 49400 41400 10 line
49400 41400 49400 40000 10 line
49400 40600 57000 40600 10 line
grestore
43100 47800 46900 47800 10 line
gsave
false false false false 260.000000 [(DATA) ] 0 43200 47800 180.555557 text
grestore
43200 47500 46200 47500 10 line
gsave
false false false false 260.000000 [(CLK) ] 0 43200 47500 180.555557 text
grestore
43200 47200 46000 47200 10 line
gsave
false false false false 260.000000 [(SRQ) ] 0 43200 47200 180.555557 text
grestore
43000 46900 44200 46900 10 line
gsave
false false false false 260.000000 [(SGND) ] 0 43200 46900 180.555557 text
grestore
42800 46600 44600 46600 10 line
gsave
false false false false 260.000000 [(LEFT) ] 0 43200 46600 180.555557 text
grestore
42900 46300 45000 46300 10 line
gsave
false false false false 260.000000 [(RIGHT) ] 0 43200 46300 180.555557 text
grestore
42700 46000 44200 46000 10 line
gsave
false false false false 260.000000 [(Vsb) ] 0 43200 46000 180.555557 text
grestore
43000 45700 44600 45700 10 line
gsave
false false false false 260.000000 [(V+12) ] 0 43200 45700 180.555557 text
grestore
42800 45400 43800 45400 10 line
gsave
false false false false 260.000000 [(GND) ] 0 43200 45400 180.555557 text
grestore
gsave
48300 45300 50400 45300 10 line
50400 45300 50400 48300 10 line
50400 48300 48300 48300 10 line
48300 48300 48300 45300 10 line
48000 48000 48300 48000 10 line
gsave
false false false false 208.000000 [(1) ] 0 48100 48100 144.444443 text
grestore
gsave
false false false false 208.000000 [(RA2) ] 0 48400 48000 144.444443 text
grestore
48000 47700 48300 47700 10 line
gsave
false false false false 208.000000 [(2) ] 0 48100 47800 144.444443 text
grestore
gsave
false false false false 208.000000 [(RA3) ] 0 48400 47700 144.444443 text
grestore
48000 47400 48300 47400 10 line
gsave
false false false false 208.000000 [(3) ] 0 48100 47500 144.444443 text
grestore
gsave
false false false false 208.000000 [(RA4) ] 0 48400 47400 144.444443 text
grestore
48000 47100 48300 47100 10 line
gsave
false false false false 208.000000 [(4) ] 0 48100 47200 144.444443 text
grestore
gsave
false false false false 208.000000 [(MCLR/RA5) ] 0 48400 47100 144.444443 text
grestore
48000 46800 48300 46800 10 line
gsave
false false false false 208.000000 [(5) ] 0 48100 46900 144.444443 text
grestore
gsave
false false false false 208.000000 [(Vss) ] 0 48400 46800 144.444443 text
grestore
48000 46500 48300 46500 10 line
gsave
false false false false 208.000000 [(6) ] 0 48100 46600 144.444443 text
grestore
gsave
false false false false 208.000000 [(RB0) ] 0 48400 46500 144.444443 text
grestore
48000 46200 48300 46200 10 line
gsave
false false false false 208.000000 [(7) ] 0 48100 46300 144.444443 text
grestore
gsave
false false false false 208.000000 [(RB1) ] 0 48400 46200 144.444443 text
grestore
48000 45900 48300 45900 10 line
gsave
false false false false 208.000000 [(8) ] 0 48100 46000 144.444443 text
grestore
gsave
false false false false 208.000000 [(RB2) ] 0 48400 45900 144.444443 text
grestore
48000 45600 48300 45600 10 line
gsave
false false false false 208.000000 [(9) ] 0 48100 45700 144.444443 text
grestore
gsave
false false false false 208.000000 [(RB3) ] 0 48400 45600 144.444443 text
grestore
50700 48000 50400 48000 10 line
gsave
false false false false 208.000000 [(18) ] 0 50500 48100 144.444443 text
grestore
gsave
false false false false 208.000000 [(RA1) ] 0 50000 48000 144.444443 text
grestore
50700 47700 50400 47700 10 line
gsave
false false false false 208.000000 [(17) ] 0 50500 47800 144.444443 text
grestore
gsave
false false false false 208.000000 [(RA0) ] 0 50000 47700 144.444443 text
grestore
50700 47400 50400 47400 10 line
gsave
false false false false 208.000000 [(16) ] 0 50500 47500 144.444443 text
grestore
gsave
false false false false 208.000000 [(RA7/OSC1) ] 0 49600 47400 144.444443 text
grestore
50700 47100 50400 47100 10 line
gsave
false false false false 208.000000 [(15) ] 0 50500 47200 144.444443 text
grestore
gsave
false false false false 208.000000 [(RA6/OSC2) ] 0 49500 47100 144.444443 text
grestore
50700 46800 50400 46800 10 line
gsave
false false false false 208.000000 [(14) ] 0 50500 46900 144.444443 text
grestore
gsave
false false false false 208.000000 [(Vdd) ] 0 50000 46800 144.444443 text
grestore
50700 46500 50400 46500 10 line
gsave
false false false false 208.000000 [(13) ] 0 50500 46600 144.444443 text
grestore
gsave
false false false false 208.000000 [(RB7) ] 0 50000 46500 144.444443 text
grestore
50700 46200 50400 46200 10 line
gsave
false false false false 208.000000 [(12) ] 0 50500 46300 144.444443 text
grestore
gsave
false false false false 208.000000 [(RB6) ] 0 50000 46200 144.444443 text
grestore
50700 45900 50400 45900 10 line
gsave
false false false false 208.000000 [(11) ] 0 50500 46000 144.444443 text
grestore
gsave
false false false false 208.000000 [(RB5) ] 0 50000 45900 144.444443 text
grestore
50700 45600 50400 45600 10 line
gsave
false false false false 208.000000 [(10) ] 0 50500 45700 144.444443 text
grestore
gsave
false false false false 208.000000 [(RB4) ] 0 50000 45600 144.444443 text
grestore
grestore
gsave
false false false false 208.000000 [(U1) ] 0 48300 48400 144.444443 text
grestore
gsave
gsave
false false false false 208.000000 [(IN) ] 0 45000 45700 144.444443 text
grestore
gsave
false false false false 208.000000 [(OUT) ] 0 45548 45700 144.444443 text
grestore
gsave
false false false false 208.000000 [(7805) ] 0 45500 45200 144.444443 text
grestore
44900 45400 45900 45400 10 line
45900 45400 45900 46000 10 line
45900 46000 44900 46000 10 line
44900 46000 44900 45400 10 line
gsave
false false false false 208.000000 [(GND) ] 0 45256 45501 144.444443 text
grestore
44900 45700 44600 45700 10 line
gsave
false false false false 208.000000 [(1) ] 0 44700 45750 144.444443 text
grestore
45400 45100 45400 45400 10 line
gsave
false false false false 208.000000 [(2) ] 0 45300 45200 144.444443 text
grestore
45900 45700 46200 45700 10 line
gsave
false false false false 208.000000 [(3) ] 0 46030 45750 144.444443 text
grestore
grestore
gsave
false true false false 260.000000 [(U2) ] 0 46000 46100 180.555557 text
grestore
gsave
45400 44900 45400 45100 10 line
45300 44900 45500 44900 10 line
45355 44850 45445 44850 10 line
45380 44810 45420 44810 10 line
grestore
gsave
43800 45200 43800 45400 10 line
43700 45200 43900 45200 10 line
43755 45150 43845 45150 10 line
43780 45110 43820 45110 10 line
grestore
46200 45700 46400 45700 10 line
gsave
false false false false 260.000000 [(Vdd) ] 0 46300 45800 180.555557 text
grestore
46400 45700 46400 44200 10 line
46400 44200 51300 44200 10 line
51300 44200 51300 46800 10 line
51300 46800 50700 46800 10 line
46900 47400 46900 47800 10 line
48000 47400 46900 47400 10 line
gsave
46600 47100 46600 47300 10 line
46450 47300 46750 47300 10 line
gsave
false false false false 208.000000 [(+5V) ] 0 46475 47350 144.444443 text
grestore
grestore
48000 47100 46600 47100 10 line
gsave
47100 46600 47100 46800 10 line
47000 46600 47200 46600 10 line
47055 46550 47145 46550 10 line
47080 46510 47120 46510 10 line
grestore
47100 46800 48000 46800 10 line
50700 45600 50700 45000 10 line
47500 45000 50700 45000 10 line
47500 45000 47500 46300 10 line
47500 46300 46200 46300 10 line
46200 46300 46200 47500 10 line
46000 46000 46000 47200 10 line
46000 46000 47200 46000 10 line
47200 46000 47200 44800 10 line
47200 44800 51000 44800 10 line
51000 44800 51000 45900 10 line
51000 45900 50700 45900 10 line
gsave
52100 47800 52100 47600 10 line
52100 47300 52100 47100 10 line
52000 47350 52200 47350 10 line
52200 47350 52200 47550 10 line
52200 47550 52000 47550 10 line
52000 47550 52000 47350 10 line
52240 47600 51960 47600 10 line
52240 47300 51960 47300 10 line
grestore
gsave
false false false false 260.000000 [(U3) ] 270 52300 47600 180.555557 text
grestore
52100 47100 50700 47100 10 line
52100 47800 51600 47800 10 line
51600 47800 51600 47400 10 line
51600 47400 50700 47400 10 line
44200 46900 44200 48800 10 line
44600 46600 44600 48900 10 line
45000 46300 45000 49300 10 line
gsave
50100 42900 50100 43100 10 line
49950 43100 50250 43100 10 line
gsave
false false false false 208.000000 [(+5V) ] 0 49975 43150 144.444443 text
grestore
grestore
gsave
49700 43100 49700 42900 10 line
49800 43100 49600 43100 10 line
49745 43150 49655 43150 10 line
49720 43190 49680 43190 10 line
grestore
49300 42900 49300 43800 10 line
44200 43800 49300 43800 10 line
44200 42100 44200 46000 10 line
44200 48500 40500 48500 10 line
40500 48500 40500 43400 10 line
40500 43400 48100 43400 10 line
44600 48300 40700 48300 10 line
40700 48300 40700 43500 10 line
40700 43500 48500 43500 10 line
48500 42700 48500 43500 10 line
48100 42800 48100 43400 10 line
45000 48200 40900 48200 10 line
40900 48200 40900 43600 10 line
40900 43600 48900 43600 10 line
48900 42600 48900 43600 10 line
50700 46200 51500 46200 10 line
51500 46200 51500 42000 10 line
51500 42000 43500 42000 10 line
43500 42000 43500 42900 10 line
43500 42900 44100 42900 10 line
50700 46500 51700 46500 10 line
51700 46500 51700 41800 10 line
51700 41800 43300 41800 10 line
43300 41800 43300 43000 10 line
43300 43000 44500 43000 10 line
44500 42300 44500 43000 10 line
50700 47700 51500 47700 10 line
51500 47700 51500 47900 10 line
51500 47900 52500 47900 10 line
52500 46800 52500 47900 10 line
52500 46800 51900 46800 10 line
51900 46800 51900 41700 10 line
51900 41700 43200 41700 10 line
43200 41700 43200 43100 10 line
43200 43100 44900 43100 10 line
44900 42400 44900 43100 10 line
50700 48000 52700 48000 10 line
52700 48000 52700 46600 10 line
52000 46600 52700 46600 10 line
52000 46600 52000 41600 10 line
52000 41600 43100 41600 10 line
43100 41600 43100 43200 10 line
43100 43200 45300 43200 10 line
45300 42700 45300 43200 10 line
48000 45600 47700 45600 10 line
47700 45600 47700 42900 10 line
48000 45900 47300 45900 10 line
47300 42800 47300 45900 10 line
48000 46200 46900 46200 10 line
46900 46200 46900 42900 10 line
48000 46500 46500 46500 10 line
46500 42900 46500 46500 10 line
46100 42500 46100 44600 10 line
41300 44600 46100 44600 10 line
41300 44600 41300 49500 10 line
41300 49500 47500 49500 10 line
47500 49500 47500 47700 10 line
47500 47700 48000 47700 10 line
48000 48000 47700 48000 10 line
47700 48000 47700 49700 10 line
47700 49700 41100 49700 10 line
41100 49700 41100 44500 10 line
41100 44500 45700 44500 10 line
45700 42600 45700 44500 10 line
gsave
45800 48400 45500 48400 10 line
gsave
false true false true 208.000000 [(2) ] 0 46950 48450 144.444443 text
grestore
45800 49000 45500 49000 10 line
gsave
false true false true 208.000000 [(4) ] 0 46950 49050 144.444443 text
grestore
45800 48100 45500 48100 10 line
gsave
false true false true 208.000000 [(1) ] 0 46950 48150 144.444443 text
grestore
45800 48700 45500 48700 10 line
gsave
false true false true 208.000000 [(3) ] 0 46950 48750 144.444443 text
grestore
45800 49300 45500 49300 10 line
gsave
false true false true 208.000000 [(5) ] 0 46950 49350 144.444443 text
grestore
45800 48100 46700 48100 10 line
45800 48400 46700 48400 10 line
45800 48700 46700 48700 10 line
45800 49000 46700 49000 10 line
45800 49300 46700 49300 10 line
46700 47900 47200 47900 10 line
47200 47900 47200 49500 10 line
47200 49500 46700 49500 10 line
46700 49500 46700 47900 10 line
grestore
gsave
false true false true 260.000000 [(J2) ] 0 47100 47800 180.555557 text
grestore
44200 48800 45300 48800 10 line
45300 48800 45300 48100 10 line
45300 48100 45500 48100 10 line
44600 48900 45400 48900 10 line
45400 48900 45400 48700 10 line
45400 48700 45500 48700 10 line
45000 49300 45500 49300 10 line
gsave
42200 47500 42500 47500 10 line
gsave
false false false false 208.000000 [(2) ] 0 41050 47450 144.444443 text
grestore
42200 46900 42500 46900 10 line
gsave
false false false false 208.000000 [(4) ] 0 41050 46850 144.444443 text
grestore
42200 46300 42500 46300 10 line
gsave
false false false false 208.000000 [(6) ] 0 41050 46250 144.444443 text
grestore
42200 45700 42500 45700 10 line
gsave
false false false false 208.000000 [(8) ] 0 41050 45650 144.444443 text
grestore
42200 47800 42500 47800 10 line
gsave
false false false false 208.000000 [(1) ] 0 41050 47750 144.444443 text
grestore
42200 47200 42500 47200 10 line
gsave
false false false false 208.000000 [(3) ] 0 41050 47150 144.444443 text
grestore
42200 46600 42500 46600 10 line
gsave
false false false false 208.000000 [(5) ] 0 41050 46550 144.444443 text
grestore
42200 46000 42500 46000 10 line
gsave
false false false false 208.000000 [(7) ] 0 41050 45950 144.444443 text
grestore
42200 47800 41300 47800 10 line
42200 47500 41300 47500 10 line
42200 47200 41300 47200 10 line
42200 46900 41300 46900 10 line
42200 46600 41300 46600 10 line
42200 46300 41300 46300 10 line
42200 46000 41300 46000 10 line
42200 45700 41300 45700 10 line
40800 45200 41300 45200 10 line
41300 45200 41300 48000 10 line
41300 48000 40800 48000 10 line
40800 48000 40800 45200 10 line
42200 45400 42500 45400 10 line
gsave
false false false false 208.000000 [(9) ] 0 41050 45350 144.444443 text
grestore
42200 45400 41300 45400 10 line
grestore
gsave
false false false false 260.000000 [(J1) ] 0 40900 48100 180.555557 text
grestore
42800 46600 42800 47800 10 line
42800 47800 42500 47800 10 line
42500 47500 43000 47500 10 line
43000 47500 43000 46900 10 line
42900 46300 42900 47200 10 line
42900 47200 42500 47200 10 line
42700 46000 42700 46900 10 line
42700 46900 42500 46900 10 line
42500 46600 42500 46700 10 line
42500 46700 43100 46700 10 line
43100 46700 43100 47800 10 line
42500 46300 42500 46200 10 line
42500 46200 44000 46200 10 line
44000 46200 44000 47500 10 line
42500 46000 42500 45900 10 line
42500 45900 44100 45900 10 line
44100 45900 44100 47200 10 line
42500 45700 42800 45700 10 line
42800 45700 42800 45400 10 line
42500 45400 42600 45400 10 line
42600 45400 42600 45600 10 line
42600 45600 43000 45600 10 line
43000 45600 43000 45700 10 line
gsave
50200 42100 50200 41900 10 line
gsave
false false false false 208.000000 [(1) ] 270 50200 41750 144.444443 text
grestore
50200 41850 50 0 360 10 darc
49800 42100 49800 41900 10 line
gsave
false false false false 208.000000 [(2) ] 270 49800 41750 144.444443 text
grestore
49800 41850 50 0 360 10 darc
49400 42100 49400 41900 10 line
gsave
false false false false 208.000000 [(3) ] 270 49400 41750 144.444443 text
grestore
49400 41850 50 0 360 10 darc
49000 42100 49000 41900 10 line
gsave
false false false false 208.000000 [(4) ] 270 49000 41750 144.444443 text
grestore
49000 41850 50 0 360 10 darc
48600 42100 48600 41900 10 line
gsave
false false false false 208.000000 [(5) ] 270 48600 41750 144.444443 text
grestore
48600 41850 50 0 360 10 darc
48200 42100 48200 41900 10 line
gsave
false false false false 208.000000 [(6) ] 270 48200 41750 144.444443 text
grestore
48200 41850 50 0 360 10 darc
47800 42100 47800 41900 10 line
gsave
false false false false 208.000000 [(7) ] 270 47800 41750 144.444443 text
grestore
47800 41850 50 0 360 10 darc
47400 42100 47400 41900 10 line
gsave
false false false false 208.000000 [(8) ] 270 47400 41750 144.444443 text
grestore
47400 41850 50 0 360 10 darc
47000 42100 47000 41900 10 line
gsave
false false false false 208.000000 [(9) ] 270 47000 41750 144.444443 text
grestore
47000 41850 50 0 360 10 darc
46600 42100 46600 41900 10 line
gsave
false false false false 208.000000 [(10) ] 270 46600 41750 144.444443 text
grestore
46600 41850 50 0 360 10 darc
46200 42100 46200 41900 10 line
gsave
false false false false 208.000000 [(11) ] 270 46200 41750 144.444443 text
grestore
46200 41850 50 0 360 10 darc
45800 42100 45800 41900 10 line
gsave
false false false false 208.000000 [(12) ] 270 45800 41750 144.444443 text
grestore
45800 41850 50 0 360 10 darc
45400 42100 45400 41900 10 line
gsave
false false false false 208.000000 [(13) ] 270 45400 41750 144.444443 text
grestore
45400 41850 50 0 360 10 darc
45000 42100 45000 41900 10 line
gsave
false false false false 208.000000 [(14) ] 270 45000 41750 144.444443 text
grestore
45000 41850 50 0 360 10 darc
44600 42100 44600 41900 10 line
gsave
false false false false 208.000000 [(15) ] 270 44600 41750 144.444443 text
grestore
44600 41850 50 0 360 10 darc
44200 42100 44200 41900 10 line
gsave
false false false false 208.000000 [(16) ] 270 44200 41750 144.444443 text
grestore
44200 41850 50 0 360 10 darc
43800 41400 50600 41400 10 line
50600 41400 50600 41800 10 line
50600 41800 43800 41800 10 line
43800 41800 43800 41400 10 line
grestore
gsave
false true false false 260.000000 [(J3) ] 270 50700 41400 180.555557 text
grestore
48100 42800 50200 42800 10 line
50200 42800 50200 42100 10 line
48500 42700 49800 42700 10 line
49800 42700 49800 42100 10 line
48900 42600 49400 42600 10 line
49400 42600 49400 42100 10 line
46100 42500 49000 42500 10 line
49000 42500 49000 42100 10 line
45700 42600 48600 42600 10 line
48600 42600 48600 42100 10 line
45300 42700 48200 42700 10 line
48200 42700 48200 42100 10 line
44900 42400 47800 42400 10 line
47800 42400 47800 42100 10 line
47400 42100 47400 42200 10 line
47400 42200 50100 42200 10 line
50100 42200 50100 42900 10 line
44500 42300 47000 42300 10 line
47000 42300 47000 42100 10 line
44100 42900 44100 42200 10 line
44100 42200 46600 42200 10 line
46600 42200 46600 42100 10 line
45400 42100 45400 42800 10 line
45400 42800 47300 42800 10 line
45000 42100 45000 43000 10 line
45000 43000 47700 43000 10 line
60 60 43170 47470 fbox
newpath
44000 47500
25
0 360 arc
fill
60 60 43170 47170 fbox
newpath
44100 47200
25
0 360 arc
fill
newpath
44200 48500
25
0 360 arc
fill
newpath
44600 48300
25
0 360 arc
fill
newpath
45000 48200
25
0 360 arc
fill
60 60 49270 42870 fbox
newpath
44200 43800
25
0 360 arc
fill
newpath
44200 43800
25
0 360 arc
fill
newpath
44200 43800
25
0 360 arc
fill
newpath
44200 48500
25
0 360 arc
fill
newpath
44200 48500
25
0 360 arc
fill
newpath
44600 48300
25
0 360 arc
fill
newpath
44600 48300
25
0 360 arc
fill
newpath
45000 48200
25
0 360 arc
fill
newpath
45000 48200
25
0 360 arc
fill
60 60 47670 42870 fbox
newpath
47700 43000
25
0 360 arc
fill
60 60 46870 42870 fbox
60 60 46470 42870 fbox
newpath
44000 47500
25
0 360 arc
fill
newpath
44000 47500
25
0 360 arc
fill
newpath
44100 47200
25
0 360 arc
fill
newpath
44100 47200
25
0 360 arc
fill
newpath
47700 43000
25
0 360 arc
fill
newpath
47700 43000
25
0 360 arc
fill
showpage
%%End
